name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: macos-latest
    steps:

    - name: Environment variables
      run: set

    - name: Installed apps
      run: ls -al /Applications

    - uses: actions/checkout@v2

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6
        bundler-cache: true

    - uses: actions/cache@v2
      name: Restore Carthage cache
      id: restore-cache
      with:
        path: Carthage
        key: ${{ runner.os }}-carthage-${{ hashFiles('**/Cartfile.resolved') }}
        restore-keys: |
          ${{ runner.os }}-carthage-

    - name: Install dependencies with Carthage
      run: carthage bootstrap --platform iOS --no-use-binaries --cache-builds

    - name: Increment build number
      run: |
        bundle exec fastlane ios testflight_increment_build_number
      env: 
        FASTLANE_USER: ${{ secrets.APPSTORE_USER }}
        FASTLANE_PASSWORD: ${{ secrets.APPSTORE_PASSWORD }}
        FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }} #https://github.com/fastlane/fastlane/tree/master/spaceship#2-step-verification

    - name: Build and test app
      run: bundle exec fastlane ios tests

    - uses: actions/upload-artifact@v2
      name: Publish test results
      with:
        name: test output
        path: fastlane/test_output/

    - uses: actions/upload-artifact@v2
      name: Publish code coverage
      with:
        name: code coverage
        path: fastlane/code_coverage/

    - name: Build and archive
      run: |
        bundle exec fastlane ios archive
      env: 
        MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }} #base64("<Github username>:<Github Personal Access Token>")
        MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

    - uses: actions/upload-artifact@v2
      name: Publish ipa
      with:
        name: App build file (ipa)
        path: ./*.ipa

    - uses: actions/upload-artifact@v2
      name: Publish dsym
      with:
        name: App build symbols (DSYM)
        path: ./*.dSYM.zip

    - name: Upload build to testflight
      continue-on-error: true
      run: |
        bundle exec fastlane ios testflight_upload
      env: 
        FASTLANE_USER: ${{ secrets.APPSTORE_USER }}
        FASTLANE_PASSWORD: ${{ secrets.APPSTORE_PASSWORD }}
        FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }} #https://github.com/fastlane/fastlane/tree/master/spaceship#2-step-verification
        FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
